---
- name: Get facts for current SG and SG Rules
  ec2_group_facts:
    region: "{{ vpc_region }}"
    filters:
      vpc-id: "{{ vpc_id }}"
  register: existing_groups

- name: Write existing SGs and SG rules to File in JSON Format
  copy:
    content: "{{ existing_groups | to_nice_json  }}"
    dest: "~/old_sg.json"

- name: Get facts for machines in VPC
  ec2_instance_facts:
    region: "{{ vpc_region }}"
    filters:
      vpc-id: "{{ vpc_id }}"
  register: existing_assignments

- name: Write existing assignments to File in JSON Format
  copy:
    content: "{{ existing_assignments | to_nice_json  }}"
    dest: "~/old_assignments.json"

- name: Read in SG/SG Rules from groups JSON file
  set_fact:
    group_in: "{{ lookup('file',group_sg) | from_json }}"

# - name: Read in SG/SG Rules from groups JSON file
#   set_fact:
#     sg_input: "{{ lookup('file','groups.json') | from_json }}"

- name: Create the SGs based on Input from JSON File
  include_tasks: create_sg.yml
  vars:
    sgtest: "{{ item }}"
    region: "{{ vpc_region }}"
    vpc: "{{ vpc_id }}"
  # with_items: "{{ sg_input.sg }}"
  with_items: "{{ group_in.sg }}"

- name: Read in Assignments from assignments JSON File
  set_fact:
    assign_in: "{{ lookup('file',assign_sg) | from_json }}"

# - name: Read in Assignments from assignments JSON File
#   set_fact:
#     assignments_input: "{{ lookup('file','assignments.json') | from_json }}"

- name: Assign SGs to VMs based on input from JSON File
  include: assign.yml
  vars:
    vpc: "{{ vpc_id }}"
    identity: "{{ item.server }}"
    eth0_groups: "{{ item.eth0 }}"
    eth1_groups: "{{ item.eth1 }}"
    vpc: "{{ vpc_id }}"
  #with_items: "{{ assignments_input.sg_assignments }}"
  with_items: "{{ assign_in.sg_assignments }}"