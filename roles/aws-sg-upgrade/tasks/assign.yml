---
- ec2_instance_facts:
    region: "{{ region }}"
    filters:
      "tag:Type": "{{ identity }}"
  register: instance_result

- set_fact:
    instances: "{{ instance_result.instances | length >= 1 }}"

- set_fact:
    single_nic: "{{ instance_result.instances[0].network_interfaces | length == 1 }}"
  when: instances

- name: Single Nic - Apply groups
  ec2_eni:
    eni_id: "{{ instance.network_interfaces[0].network_interface_id }}"
    region: "{{ region }}"
    security_groups: "{{ eth0_groups}}"
    state: present
  with_items: "{{ instance_result.instances }}"
  loop_control:
       loop_var: instance
  when: instances and single_nic

- name: Update security groups for eth1
  ec2_eni:
    eni_id: "{{ instance.network_interfaces[0].network_interface_id }}"
    region: "{{ region }}"
    security_groups: "{{ eth1_groups}}"
    state: present
  with_items: "{{ instance_result.instances }}"
  loop_control:
       loop_var: instance
  when: not single_nic and instances

- name: Update security groups for eth0
  ec2_eni:
    eni_id: "{{ instance.network_interfaces[1].network_interface_id }}"
    region: "{{ region }}"
    security_groups: "{{ eth0_groups}}"
    state: present
  with_items: "{{ instance_result.instances }}"
  loop_control:
       loop_var: instance
  when: not single_nic and instances
