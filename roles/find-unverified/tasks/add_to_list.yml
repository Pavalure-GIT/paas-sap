---
- name: Get facts by name
  azure_rm_virtualmachine_facts:
    resource_group: "{{ vm_group }}"
    name: "{{ vm_name }}"
  register: azure_vm_info
  when: cloud == 'Azure'

- name: Get facts for AWS instance "{{ vm_name }}"
  ec2_instance_facts:
    region: "{{ vm_group }}"
    instance_ids:
      - "{{ vm_name }}"
  register: aws_vm_info
  when: cloud == 'AWS'

- set_fact:
    report_name: "{{ vm_name }} {{ aws_vm_info.instances[0].tags.Name if aws_vm_info.instances[0].tags.Name is defined else '' }}"
  when: cloud == 'AWS'

- set_fact:
    report_name: "{{ vm_name }}"
  when: cloud == 'Azure'

- set_fact:
    skip_machine: false
    vm_tags: "{{ azure_vm_info.vms[0].tags.Owner if azure_vm_info.vms[0].tags.Owner is defined else 'Unknown' }}"
  when: cloud == 'Azure'

- set_fact:
    skip_machine: false
    vm_tags: "{{ aws_vm_info.instances[0].tags.Owner if aws_vm_info.instances[0].tags.Owner is defined else 'Unknown' }}"
  when: cloud == 'AWS'

- name: Check for Always-On machines and set skip boolean
  set_fact:
    skip_machine: true
  with_items: "{{ alwayson_names }}"
  when: ("{{ item.name if cloud == 'Azure' else item.id }}" == "{{ azure_vm_info.vms[0].name if cloud == 'Azure' else aws_vm_info.instances[0].instance_id }}")

- name: Check for Schedule machines and set skip boolean
  set_fact:
    skip_machine: true
  with_items: "{{ scheduled_names }}"
  when: ("{{ item.name if cloud == 'Azure' else item.id }}" == "{{ azure_vm_info.vms[0].name if cloud == 'Azure' else aws_vm_info.instances[0].instance_id }}")

- set_fact:
    unverified: "{{ unverified  + [ {'name':report_name, 'group':vm_group, 'owner':vm_tags} ] }}"
  when: (not skip_machine) and ("{{ azure_vm_info.vms[0].power_state if cloud == 'Azure' else aws_vm_info.instances[0].state.name }}" == "running")
