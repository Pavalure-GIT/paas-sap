#Always create the first NIC
- name: Create Nic1
  azure_rm_networkinterface:
    name: "{{ azure_vm_name }}-nic1"
    resource_group: "{{ azure_vm_resource_group }}"
    virtual_network: "{{ azure_vm_vnet }}"
    subnet_name: "{{ azure_vm_nic1_subnet }}"
    security_group: "{{ azure_vm_nic1_nsg }}"
    state: present
  register: nic1

#Create second NIC when nic2 subnet is populated
- name: Create Nic2
  azure_rm_networkinterface:
    name: "{{ azure_vm_name }}-nic2"
    resource_group: "{{ azure_vm_resource_group }}"
    virtual_network: "{{ azure_vm_vnet }}"
    subnet_name: "{{ azure_vm_nic2_subnet }}"
    security_group: "{{ azure_vm_nic2_nsg }}"
    state: present
  when: (azure_vm_nic2_subnet != "" ) #Check to see if two NIC's are required
  register: nic2

- name: Provision virtual machine with 1 nic
  azure_rm_virtualmachine:
    name: "{{ azure_vm_name }}"
    resource_group: "{{azure_vm_resource_group}}"
    vm_size: "{{azure_vm_size}}"
    network_interface_names: 
    - "{{nic1.state.name}}"
    image:
      offer: "{{azure_vm_image_offer}}"
      publisher: "{{azure_vm_publisher}}"
      sku: "{{azure_vm_sku}}"
      version: latest
    admin_username: "{{ username }}"
    ssh_password_enabled: false  
    ssh_public_keys:
      - path: /home/{{ username }}/.ssh/authorized_keys
        key_data: "{{azure_vm_public_ssh}}"
    availability_set: "{{azure_vm_availability_set_name}}"
    tags: 
      "{'type' : '{{ azure_vm_tags }}'}"
    state: present
  when: 
    - nic2.state is not defined and azure_vm_name != "suma" 

- name: Provision virtual machine with 2 nics
  azure_rm_virtualmachine:
    name: "{{ azure_vm_name }}"
    resource_group: "{{azure_vm_resource_group}}"
    vm_size: "{{azure_vm_size}}"
    network_interface_names:
    - "{{nic1.state.name}}"
    - "{{nic2.state.name}}"
    image:
      offer: "{{azure_vm_image_offer}}"
      publisher: "{{azure_vm_publisher}}"
      sku: "{{azure_vm_sku}}"
      version: latest
    admin_username: "{{ username }}"
    ssh_password_enabled: false
    ssh_public_keys:
      - path: /home/{{ username }}/.ssh/authorized_keys
        key_data: "{{azure_vm_public_ssh}}"
    availability_set: "{{azure_vm_availability_set_name}}"
    tags:
      "{'type' : '{{ azure_vm_tags }}'}"
    state: present
  when:
       - nic2.state is defined and azure_vm_name != "suma" 

  #create suma VM
- include_tasks: azure-vm-suma.yml
  vars:
    storage_account_name: suma1234
    storage_blob_name: suse_manager.vhd
    storage_blob: suma_osdisk.vhd
    data_disk_size: 200
    storage_container_name: vhds
  when: azure_vm_name == "suma"
  
#Calling DNS entries to add the NIC(s) to the required DNS
- include_tasks: dns-entries.yml
  when: azure_vm_add_dns
