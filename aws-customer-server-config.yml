---
- name: Create Server
  hosts: localhost
  tasks:
    - name: Provision ec2 VM
      include_role:
        name: aws-ec2-vm
      vars:
        aws_ec2_vm_Name: "{{ vm_name }}"
        aws_ec2_vm_region: "{{ region }}"
        aws_ec2_vm_key_name: "{{ key_name }}"
        aws_ec2_vm_instance_type: "{{ instance_type }}"
        aws_ec2_vm_image: "{{ image }}"
        aws_ec2_vm_eth0_subnet: "{{ eth0_subnet_id }}"
        aws_ec2_vm_eth1_subnet: "{{ eth1_subnet_id }}"
        aws_eth0_security_groups: "{{ eth0_groups }}"
        aws_eth1_security_groups: "{{ eth1_groups }}"
    
    - name: Add eth0 to DNS
      route53:
        state: present
        zone: "{{ eth0_dns }}"
        record: "{{ dns_prefix }}.{{ eth0_dns }}"
        type: A
        private_zone: yes
        ttl: 300
        value: "{{ eth0.interface.private_ip_address }}"
        wait: yes
      when: "{{ eth0_dns != '' }}"
    
    - name: Add eth0 to Reverse DNS    
      route53:
        state: present
        zone: in-addr.arpa
        hosted_zone_id: "{{ reverse_dns_id }}"
        record: "{{ eth0.interface.private_ip_address | ipaddr('revdns') }}"
        type: PTR
        private_zone: yes
        ttl: 300
        value: "{{ dns_prefix }}.{{ eth0_dns }}"
        wait: yes
      when: "{{ eth0_dns != '' and reverse_dns_id != '' }}"
        
    - name: Add eth1 to DNS
      route53:
        state: present
        zone: "{{ eth1_dns }}"
        record: "{{ dns_prefix }}.{{ eth1_dns }}"
        type: A
        private_zone: yes
        ttl: 300
        value: "{{ eth1.interface.private_ip_address }}"
        wait: yes
      when: "{{ eth1_dns != '' }}"
     
    - name: Add eth0 to Reverse DNS    
      route53:
        state: present
        zone: in-addr.arpa
        hosted_zone_id: "{{ reverse_dns_id }}"
        record: "{{ eth1.interface.private_ip_address | ipaddr('revdns') }}"
        type: PTR
        private_zone: yes
        ttl: 300
        value: "{{ dns_prefix }}.{{ eth1_dns }}"
        wait: yes
      when: "{{ eth1_dns != '' and reverse_dns_id != '' }}"
        
    - name: Set IP if eth0 is management
      set_fact:
        management_ip: "{{ eth0.interface.private_ip_address }}"
      when: "{{ management_nic == 'eth0' }}"
        
    - name: Set IP if eth1 is management
      set_fact:
        management_ip: "{{ eth1.interface.private_ip_address }}"
      when: "{{ management_nic == 'eth1' }}"
      
    - name: Add server to Group
      add_host:
        name: "{{ management_ip }}"
        groups: provisioned_server
      
    - name: Wait for network access to host
      wait_for:
        host: "{{ management_ip }}"
#
- name: Configure Server
  hosts: provisioned_server
  tasks:
    - name: Configure SAP Router
      include_role:
        name: saprouter
      vars:
        management_subnet_cidr: "{{ management_range }}"
        acl_localnet_src_a: "{{ management_subnet_az1 }}"
        acl_localnet_src_b: "{{ management_subnet_az2 }}"
        static_route: route add default gw "{{ static_route_ip  }}" eth1
        azure_region: "{{ region }}"
      when: saprouter
    - name: Configure Mid Server
      include_role:
        name: midserver
      when: midserver
